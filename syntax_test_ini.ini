; SYNTAX TEST "Packages/INI Syntax/INI.sublime-syntax"

; comment
;<- punctuation.definition.comment
;^^^^^^^^ comment.line.semicolon

# comment
;<- punctuation.definition.comment
;^^^^^^^^ comment.line.number-sign

    # comment
;   ^  punctuation.definition.comment
;   ^^^^^^^^^ comment.line.number-sign

[section]
;^^^^^^^^ meta.section
;<- punctuation.definition.section.begin
;^^^^^^^ entity.name.section
;       ^ punctuation.definition.section.end

[section.subsection]
;^^^^^^^^^^^^^^^^^^^ meta.section
;^^^^^^^^^^^^^^^^^^ entity.name.section
;       ^ punctuation.separator.namespace

[testenv:py38-{x86,x64}-venv]
;^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.section
;^^^^^^^^^^^^^^^^^^^^^^^^^^^ entity.name.section
;       ^ punctuation.separator.colon

[-HKEY_CLASSES_ROOT\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}]
;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.section
;^ keyword.operator.arithmetic - entity.name.section
; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ entity.name.section
;                  ^ punctuation.separator.backslash
;                        ^ punctuation.separator.backslash
;                                  ^ - keyword.operator

key=value# no comment
;^^ meta.mapping.key string.unquoted
;  ^ meta.mapping punctuation.separator.mapping.key-value
;   ^^^^^^^^^^^^^^^^^ meta.mapping.value
;   ^^^^^^ string.unquoted
;          ^^ string.unquoted
;             ^^^^^^^ string.unquoted
;        ^^^^^^^^^^^^ - comment

key=value # comment
;^^ meta.mapping.key string.unquoted
;  ^ meta.mapping punctuation.separator.mapping.key-value
;   ^^^^^^^^^^^^^^^ meta.mapping.value
;   ^^^^^ string.unquoted
;         ^  punctuation.definition.comment
;         ^^^^^^^^^ comment.line.number-sign - string

key = value
;^^^ meta.mapping.key
;  ^^^ - string
;   ^ meta.mapping punctuation.separator.mapping.key-value
;    ^^^^^^ meta.mapping.value

key: value
;^^ meta.mapping.key
;  ^ meta.mapping punctuation.separator.mapping.key-value
;   ^^^^^^ meta.mapping.value

key='string with spaces'
;   ^^^^^^^^^^^^^^^^^^^^ meta.mapping.value string.quoted.single

key="string with spaces"
;   ^^^^^^^^^^^^^^^^^^^^ meta.mapping.value string.quoted.double

key=abc\ndef\"
;   ^^^^^^^^^^ meta.mapping.value string.unquoted
;      ^^ constant.character.escape
;           ^^ constant.character.escape

key=..\Path\To\File.txt
;   ^^^^^^^^^^^^^^^^^^^ meta.mapping.value string.unquoted - constant.character.escape

envlist = py38,
;         ^^^^^ meta.mapping.value
;         ^^^^ string.unquoted
;             ^ punctuation.separator.sequence - string
          pep8,
;         ^^^^^ meta.mapping.value
;         ^^^^ string.unquoted
;             ^ punctuation.separator.sequence - string
          docs
;         ^^^^ meta.mapping.value string.unquoted

ignore =
    F841
;   ^^^^ meta.mapping.value string.unquoted - meta.mapping.key
    E252
    W504  # line break after binary operator
    F821
;   ^^^^ meta.mapping.value string.unquoted - meta.mapping.key

basepython =
    py26: python2.6
;   ^^^^ meta.mapping.key string.unquoted - meta.mapping.value
    py27: python2.7
    py33: python3.3
    py34: python3.4

key=true
;   ^^^^ meta.mapping.value constant.language

key=True
;   ^^^^ meta.mapping.value constant.language

key=TRUE
;   ^^^^ meta.mapping.value constant.language

key=1234
;   ^^^^ meta.mapping.value constant.numeric.integer.decimal

key=-1234
;   ^^^^^ meta.mapping.value constant.numeric.integer.decimal
;   ^ - keyword.operator

key=1.234
;   ^^^^^ meta.mapping.value constant.numeric.float.decimal
;    ^ punctuation.separator.decimal

key=1.234e-2
;   ^^^^^^^^ meta.mapping.value constant.numeric.float.decimal
;    ^ punctuation.separator.decimal

key=1.234f
;   ^^^^^^ meta.mapping.value constant.numeric.float.decimal
;    ^ punctuation.separator.decimal
;        ^ storage.type.numeric

key=(X=16.000000,Y=16.000000,Z=16.000000)
;   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value string.unquoted - constant.numeric - punctuation

key=string.1234.false
;   ^^^^^^^^^^^^^^^^^ meta.mapping.value
;   ^^^^^^^^^^^^^^^^^ string.unquoted - constant.numeric - constant.language

key=string 1234 false
;   ^^^^^^^^^^^^^^^^^ meta.mapping.value
;   ^^^^^^ string.unquoted
;          ^^^^ constant.numeric.integer.decimal
;               ^^^^^ constant.language

key1,key2,key3=value
;^^^^^^^^^^^^^ meta.mapping.key
;   ^ punctuation.separator.sequence
;        ^ punctuation.separator.sequence

key[1]=value
;^^^^^ meta.mapping.key
;  ^ punctuation.section.brackets.begin
;   ^ constant.numeric.integer.decimal
;    ^ punctuation.section.brackets.end

key-with-hyphen=value
;^^^^^^^^^^^^^^ meta.mapping.key string.unquoted

"Attributes"=dword:f080004d
;^^^^^^^^^^^ meta.mapping.key string.quoted.double
;           ^ meta.mapping punctuation.separator.mapping.key-value - meta.mapping.key - meta.mapping.value
;            ^^^^^^^^^^^^^^ meta.mapping.value
;            ^^^^^ storage.type.dword
;                  ^^^^^^^^ constant.numeric.integer.hexadecimal

"Attributes"=hex(2):01,23,45,67,89,ab,cd,ef
;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value
;            ^^^^^^ storage.type.hex
;                   ^^ constant.numeric.integer.hexadecimal
;                     ^ punctuation.separator.sequence

"Attributes"=-
;            ^ keyword.operator.arithmetic

@="Value"
;<- meta.mapping.key string.unquoted

@=hex:25,00,73,00,79,00,73,00,74,00,65,00,6d,00,72,00,6f,00,6f,00,74,00,25,65,\
;                                                                             ^ punctuation.separator.continuation.line
  00,6c,00,6c,00,33,00,32,00,2e,00,64,00,6c,00,6c,00,00,00
; ^^ meta.mapping.value constant.numeric.integer.hexadecimal - meta.mapping.key
